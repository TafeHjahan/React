{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { imgeIndex } from \"../constants/images.js\";\nimport Settings from \"../constants/Settings\";\nimport Styles from \"../styles/MainStyle\";\nimport { MyButton } from \"../components/MyButton\";\nimport { TextH1, TextParagraph } from \"../components/StyledText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen(props) {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLogoColour = _React$useState2[0],\n    setIsLogoColour = _React$useState2[1];\n  function toggleLogo() {\n    setIsLogoColour(!isLogoColour);\n  }\n  function showHelp() {\n    props.navigation.replace('Root', {\n      screen: 'Help'\n    });\n  }\n  function showViewPeople() {\n    props.navigation.replace('Root', {\n      screen: 'People'\n    });\n  }\n  return _jsx(SafeAreaView, {\n    style: Styles.safeAreaView,\n    children: _jsxs(ScrollView, {\n      style: Styles.container,\n      contentContainerStyle: Styles.contentContainer,\n      children: [_jsx(View, {\n        style: Styles.homeLogoContainer,\n        children: _jsx(Pressable, {\n          onPress: toggleLogo,\n          children: _jsx(Image, {\n            source: isLogoColour ? require(\"../assets/images/roi-logo.jpg\") : require(\"../assets/images/roi-logo-monochrome.jpg\"),\n            style: Styles.homeLogo\n          })\n        })\n      }), _jsx(View, {\n        style: Styles.homeHeadingContainer,\n        children: _jsx(Text, {\n          style: Styles.homeHeading,\n          children: \"ROI HR management System\"\n        })\n      }), _jsxs(View, {\n        style: Styles.homeButtonContainer,\n        children: [_jsx(MyButton, {\n          text: \"View people\",\n          type: \"major\",\n          size: \"large\",\n          onPress: showViewPeople,\n          buttonStyle: Styles.homeButton\n        }), _jsx(MyButton, {\n          text: \"Help\",\n          type: \"default\",\n          size: \"large\",\n          onPress: showHelp,\n          buttonStyle: Styles.homeButton\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","Image","Text","View","ScrollView","Pressable","SafeAreaView","imgeIndex","Settings","Styles","MyButton","TextH1","TextParagraph","jsx","_jsx","jsxs","_jsxs","HomeScreen","props","_React$useState","useState","_React$useState2","_slicedToArray","isLogoColour","setIsLogoColour","toggleLogo","showHelp","navigation","replace","screen","showViewPeople","style","safeAreaView","children","container","contentContainerStyle","contentContainer","homeLogoContainer","onPress","source","require","homeLogo","homeHeadingContainer","homeHeading","homeButtonContainer","text","type","size","buttonStyle","homeButton"],"sources":["C:/React/React/screens/HomeScreen.js"],"sourcesContent":["// @ts-nocheck\nimport * as React from 'react';\nimport { Image, Text, View, ScrollView,Pressable } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport {imgeIndex} from '../constants/images.js'\n\n// Import helper code\nimport Settings from '../constants/Settings';\n\n// Import styling and components\nimport Styles from \"../styles/MainStyle\";\nimport { MyButton } from '../components/MyButton';\nimport { TextH1, TextParagraph } from \"../components/StyledText\";\n\n\nexport default function HomeScreen(props) {\n\n  //state management\n  const[isLogoColour,setIsLogoColour]=React.useState(true);\n\n  //Toggle the value of isLogoColour (true/false)\nfunction toggleLogo(){\n\n  setIsLogoColour(!isLogoColour)\n}\n  function showHelp() {\n    props.navigation.replace('Root', {screen: 'Help'});\n  }\n\n  function showViewPeople() {\n    props.navigation.replace('Root', {screen: 'People'});\n  }\n\n  return (\n    <SafeAreaView style={Styles.safeAreaView}>\n      <ScrollView style={Styles.container} contentContainerStyle={Styles.contentContainer}>\n        \n      \n      <View style={Styles.homeLogoContainer}>\n      <Pressable onPress={toggleLogo}>\n       <Image source={isLogoColour ? require('../assets/images/roi-logo.jpg') : require('../assets/images/roi-logo-monochrome.jpg')} style={Styles.homeLogo}/>\n       \n      \n      </Pressable>\n      </View> \n\n       \n\n       <View style={Styles.homeHeadingContainer}>\n\n        <Text style={Styles.homeHeading}>ROI HR management System</Text>\n       </View>\n       \n\n        {/*Button*/}\n        \n         <View style={Styles.homeButtonContainer}>\n          <MyButton\n            text=\"View people\"\n            type=\"major\"      // default*|major|minor\n            size=\"large\"      // small|medium*|large\n            onPress={showViewPeople}\n            \n            buttonStyle={Styles.homeButton}\n           \n          />\n            <MyButton\n            text=\"Help\"\n            type=\"default\"      // default*|major|minor\n            size=\"large\"      // small|medium*|large\n            onPress={showHelp}\n            buttonStyle={Styles.homeButton}\n         \n          />  \n          </View>  \n        \n      </ScrollView>\n    </SafeAreaView>\n  );\n}"],"mappings":";AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAE/B,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAAQC,SAAS;AAGjB,OAAOC,QAAQ;AAGf,OAAOC,MAAM;AACb,SAASC,QAAQ;AACjB,SAASC,MAAM,EAAEC,aAAa;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGjE,eAAe,SAASC,UAAUA,CAACC,KAAK,EAAE;EAGxC,IAAAC,eAAA,GAAoCnB,KAAK,CAACoB,QAAQ,CAAC,IAAI,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAlDI,YAAY,GAAAF,gBAAA;IAACG,eAAe,GAAAH,gBAAA;EAGpC,SAASI,UAAUA,CAAA,EAAE;IAEnBD,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC;EACE,SAASG,QAAQA,CAAA,EAAG;IAClBR,KAAK,CAACS,UAAU,CAACC,OAAO,CAAC,MAAM,EAAE;MAACC,MAAM,EAAE;IAAM,CAAC,CAAC;EACpD;EAEA,SAASC,cAAcA,CAAA,EAAG;IACxBZ,KAAK,CAACS,UAAU,CAACC,OAAO,CAAC,MAAM,EAAE;MAACC,MAAM,EAAE;IAAQ,CAAC,CAAC;EACtD;EAEA,OACEf,IAAA,CAACR,YAAY;IAACyB,KAAK,EAAEtB,MAAM,CAACuB,YAAa;IAAAC,QAAA,EACvCjB,KAAA,CAACZ,UAAU;MAAC2B,KAAK,EAAEtB,MAAM,CAACyB,SAAU;MAACC,qBAAqB,EAAE1B,MAAM,CAAC2B,gBAAiB;MAAAH,QAAA,GAGpFnB,IAAA,CAACX,IAAI;QAAC4B,KAAK,EAAEtB,MAAM,CAAC4B,iBAAkB;QAAAJ,QAAA,EACtCnB,IAAA,CAACT,SAAS;UAACiC,OAAO,EAAEb,UAAW;UAAAQ,QAAA,EAC9BnB,IAAA,CAACb,KAAK;YAACsC,MAAM,EAAEhB,YAAY,GAAGiB,OAAO,gCAAgC,CAAC,GAAGA,OAAO,2CAA2C,CAAE;YAACT,KAAK,EAAEtB,MAAM,CAACgC;UAAS,CAAC;QAAC,CAG7I;MAAC,CACN,CAAC,EAIN3B,IAAA,CAACX,IAAI;QAAC4B,KAAK,EAAEtB,MAAM,CAACiC,oBAAqB;QAAAT,QAAA,EAExCnB,IAAA,CAACZ,IAAI;UAAC6B,KAAK,EAAEtB,MAAM,CAACkC,WAAY;UAAAV,QAAA,EAAC;QAAwB,CAAM;MAAC,CAC3D,CAAC,EAKLjB,KAAA,CAACb,IAAI;QAAC4B,KAAK,EAAEtB,MAAM,CAACmC,mBAAoB;QAAAX,QAAA,GACvCnB,IAAA,CAACJ,QAAQ;UACPmC,IAAI,EAAC,aAAa;UAClBC,IAAI,EAAC,OAAO;UACZC,IAAI,EAAC,OAAO;UACZT,OAAO,EAAER,cAAe;UAExBkB,WAAW,EAAEvC,MAAM,CAACwC;QAAW,CAEhC,CAAC,EACAnC,IAAA,CAACJ,QAAQ;UACTmC,IAAI,EAAC,MAAM;UACXC,IAAI,EAAC,SAAS;UACdC,IAAI,EAAC,OAAO;UACZT,OAAO,EAAEZ,QAAS;UAClBsB,WAAW,EAAEvC,MAAM,CAACwC;QAAW,CAEhC,CAAC;MAAA,CACI,CAAC;IAAA,CAEC;EAAC,CACD,CAAC;AAEnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}